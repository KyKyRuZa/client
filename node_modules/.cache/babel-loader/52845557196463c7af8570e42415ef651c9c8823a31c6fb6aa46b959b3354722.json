{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth';\nconst authService = {\n  async register(userData) {\n    const response = await axios.post(`${API_URL}/register`, userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  },\n  async login(credentials) {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  },\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  },\n  getToken() {\n    return localStorage.getItem('token');\n  }\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","authService","register","userData","response","post","data","token","localStorage","setItem","JSON","stringify","user","login","credentials","logout","removeItem","getCurrentUser","parse","getItem","getToken"],"sources":["D:/Users/Галим/Desktop/Delrone reborn/client/src/services/authservice.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/auth';\r\n\r\nconst authService = {\r\n    async register(userData) {\r\n        const response = await axios.post(`${API_URL}/register`, userData);\r\n        if (response.data.token) {\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('user', JSON.stringify(response.data.user));\r\n        }\r\n        return response.data;\r\n    },\r\n\r\n    async login(credentials) {\r\n        const response = await axios.post(`${API_URL}/login`, credentials);\r\n        if (response.data.token) {\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('user', JSON.stringify(response.data.user));\r\n        }\r\n        return response.data;\r\n    },\r\n\r\n    logout() {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n    },\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    },\r\n\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,MAAMC,WAAW,GAAG;EAChB,MAAMC,QAAQA,CAACC,QAAQ,EAAE;IACrB,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,WAAW,EAAEG,QAAQ,CAAC;IAClE,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC;IACpE;IACA,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMO,KAAKA,CAACC,WAAW,EAAE;IACrB,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAEc,WAAW,CAAC;IAClE,IAAIV,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC;IACpE;IACA,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDS,MAAMA,CAAA,EAAG;IACLP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;EACnC,CAAC;EAEDC,cAAcA,CAAA,EAAG;IACb,OAAOP,IAAI,CAACQ,KAAK,CAACV,YAAY,CAACW,OAAO,CAAC,MAAM,CAAC,CAAC;EACnD,CAAC;EAEDC,QAAQA,CAAA,EAAG;IACP,OAAOZ,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;EACxC;AACJ,CAAC;AAED,eAAelB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}